name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew clean build -x test --no-daemon

  http-tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Start Spring Boot App
        run: |
          nohup ./gradlew bootRun --no-daemon &> app.log &
          echo "APP_PID=$!" >> $GITHUB_ENV

      - name: Wait for app to accept HTTP
        shell: bash
        run: |
          set -euo pipefail
          for i in {1..60}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8080/actuator/health || true)
            if [[ "$code" =~ ^(200|204|404)$ ]]; then
              echo "Server up: /actuator/health -> $code"
              exit 0
            fi
            sleep 1
          done
          echo "Server did not start in time"
          tail -n 200 app.log || true
          exit 1

      - name: Download and setup ijhttp CLI
        run: |
          curl -fL -o ijhttp.zip "https://jb.gg/ijhttp/latest"
          unzip -qo ijhttp.zip
          # Discover the executable
          IJHTTP_EXEC=$(find . -type f -name "ijhttp" -perm /a+x | head -n1 || true)
          if [ -z "$IJHTTP_EXEC" ]; then
            echo "ijhttp executable not found â€“ skipping HTTP tests"
            exit 0
          fi
          chmod +x "$IJHTTP_EXEC"
          echo "IJHTTP_EXEC=$IJHTTP_EXEC" >> $GITHUB_ENV

      - name: Run HTTP tests (messaging only)
        run: |
          if [ -z "${{ env.IJHTTP_EXEC }}" ]; then
            echo "Skipping HTTP tests because IJHTTP_EXEC is not set"
          else
            "${{ env.IJHTTP_EXEC }}" messaging.http --env-file http-client.env.json --env local --report
          fi


      - name: Upload HTTP test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: http-client-report
          path: reports/

      - name: Upload app log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-log
          path: app.log

      - name: Stop Spring Boot App
        if: always()
        run: |
          if [ -n "${{ env.APP_PID }}" ]; then kill ${{ env.APP_PID }} || true; fi
